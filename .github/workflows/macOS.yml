name: macOS Red-light Tests

on:
  push:
    branches: [ devel/macOS ]
  pull_request:
    branches: [ main, devel/macOS ]
  workflow_dispatch: {}

jobs:
  test-macos:
    name: Run macOS red-light tests
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Ensure Homebrew is available
        run: |
          # macOS runners typically have Homebrew; ensure it's healthy
          which brew || /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          brew update || true

      - name: Install macOS system deps (tcl-tk, powershell where possible)
        run: |
          # Install tcl-tk to support tkinter-based tests and GUI
          brew list tcl-tk || brew install tcl-tk
          # Install PowerShell (pwsh) to allow .ps1 script execution on macOS
          brew list powershell || brew install powershell || true

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          # Install project runtime deps (pyinstaller) but keep tests separated
          python -m pip install -r requirements.txt || true
          # Install pytest explicitly for CI tests
          python -m pip install pytest

      - name: Download native bsnes macOS binary
        id: bsnes_download
        run: |
          set -e
          mkdir -p libs/bsnes/mac
          # Download the nightly macOS build directly from the bsnes releases 'nightly' tag.
          # This avoids API parsing and ensures we fetch the known macOS artifact.
          URL="https://github.com/bsnes-emu/bsnes/releases/download/nightly/bsnes-macos.zip"
          echo "Downloading $URL"
          curl -fLS -o libs/bsnes/mac/bsnes-macos.zip "$URL"
          echo "Downloaded to libs/bsnes/mac/bsnes-macos.zip"

      - name: Unpack bsnes (mac)
        run: |
          cd libs/bsnes/mac && if [ -f bsnes-macos.zip ]; then unzip -o bsnes-macos.zip || true; fi

      - name: Download pvsneslib devkitsnes (release 4.4.0)
        id: pvsnes_download
        run: |
          set -e
          mkdir -p libs/pvsneslib
          # Download the source archive for tag 4.4.0 and extract devkitsnes
          URL="https://github.com/alekmaul/pvsneslib/archive/refs/tags/4.4.0.zip"
          echo "Downloading pvsneslib from $URL"
          curl -fLS -o /tmp/pvsneslib-4.4.0.zip "$URL"
          unzip -q /tmp/pvsneslib-4.4.0.zip -d /tmp
          # The extracted folder will be pvsneslib-4.4.0/ ; copy devkitsnes if present
          if [ -d /tmp/pvsneslib-4.4.0/devkitsnes ]; then
            rm -rf libs/pvsneslib/devkitsnes || true
            mkdir -p libs/pvsneslib
            cp -R /tmp/pvsneslib-4.4.0/devkitsnes libs/pvsneslib/
            echo "Copied devkitsnes to libs/pvsneslib/devkitsnes"
          else
            echo "devkitsnes not found inside release artifact; please verify release contents"
            exit 1
          fi

      - name: Run tests (red-light)
        run: |
          echo "Running intentionally-failing red-light tests for macOS port"
          python -m pytest -q
